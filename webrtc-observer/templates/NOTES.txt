Thank you for applying WebRTC-Observer from ObserveRTC.
You have installed the following components:
{{- if .Values.observer.enabled }}
 * Observer: {{ include "observer.fullname" . }}
    version: {{ .Values.observer.image.tag }}
    {{- if .Values.observer.ingress.enabled }}
    {{- range $host := .Values.observer.ingress.hosts }}
      {{- range .paths }}
    URL: http{{ if $.Values.observer.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
      {{- end }}
    {{- end }}
    {{- else if contains "NodePort" .Values.observer.service.type }}
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "observer.fullname" . }})
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo http://$NODE_IP:$NODE_PORT
    {{- else if contains "LoadBalancer" .Values.observer.service.type }}
    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "observer.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
    echo http://$SERVICE_IP:{{ .Values.observer.service.port }}
    {{- else if contains "ClusterIP" .Values.observer.service.type }}
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "observer.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
    echo "Visit http://127.0.0.1:8080 to use your application"
    kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80
    {{- end }}
{{- end }}


{{- if .Values.connector.enabled }}
 * Connector: {{ include "connector.fullname" . }}
    version: {{ .Values.connector.image.tag }}
{{- end }}

{{- if .Values.kafka.enabled }}
 * Kafka: {{ include "kafka.fullname" . }}
     bootstrap.servers: {{ .Values.kafka.envs.advertisedHost }}:{{ .Values.kafka.envs.advertisedPort }}
{{- end }}
{{- if .Values.zookeeper.enabled }}
 * Zookeeper: {{ include "zookeeper.fullname" . }}
     server: {{ .Values.zookeeper.envs.zookeeperServer }}
{{- end }}
