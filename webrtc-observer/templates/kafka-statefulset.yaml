{{- if .Values.kafka.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kafka.fullname" . }}
  labels:
  {{- include "kafka.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "kafka.fullname" . }}
  {{- if not .Values.kafka.autoscaling.enabled }}
  replicas: {{ .Values.kafka.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
  {{- include "kafka.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.kafka.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
    {{- include "kafka.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 15
      volumes:
        - name: data
          {{- if .Values.kafka.pvc.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "kafka.pvcName" . }}
          {{- else }}
          emptyDir: { }
          {{- end }}
      serviceAccountName: {{ include "webrtc-observer.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.kafka.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.kafka.containerName }}
          volumeMounts:
            - name: data
              mountPath: /etc/mydata/logs
              subPath: data
          securityContext:
          {{- toYaml .Values.kafka.securityContext | nindent 12 }}
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
          ports:
            - containerPort: 9092
              protocol: TCP
          env:
            - name: KAFKA_ADVERTISED_PORT
              value: {{ .Values.kafka.envs.advertisedPort | quote }}
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: {{ .Values.kafka.envs.advertisedHost | quote }}
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: {{ include "kafka.zookeeperConnect" . | quote}}
            - name: KAFKA_BROKER_ID
              value: {{ .Values.kafka.envs.brokerId | quote }}
            - name: KAFKA_CREATE_TOPICS
              value: {{ .Values.kafka.envs.createTopics | quote }}
            - name: KAFKA_LOG_DIRS
              value: "/etc/mydata/logs"
          resources:
      {{- toYaml .Values.kafka.resources | nindent 12 }}
      {{- with .Values.kafka.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kafka.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kafka.tolerations }}
      tolerations:
  {{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
